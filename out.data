warning: unused imports: `max`, `min`
 --> src/dipole.rs:5:16
  |
5 | use std::cmp::{max, min};
  |                ^^^  ^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `flate2::read::DeflateDecoder`
  --> src/driver.rs:15:5
   |
15 | use flate2::read::DeflateDecoder;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `flate2::write::DeflateEncoder`
  --> src/driver.rs:16:5
   |
16 | use flate2::write::DeflateEncoder;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `flate2::Compression`
  --> src/driver.rs:17:5
   |
17 | use flate2::Compression;
   |     ^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Slice`, `s`
  --> src/driver.rs:20:15
   |
20 | use ndarray::{s, Array, Array1, Array2, Array3, Axis, Slice, Zip};
   |               ^                                       ^^^^^

warning: unused import: `BufReader`
  --> src/driver.rs:24:27
   |
24 | use std::io::{prelude::*, BufReader};
   |                           ^^^^^^^^^

warning: unused import: `fftw::plan::*`
 --> src/integralequation.rs:3:5
  |
3 | use fftw::plan::*;
  |     ^^^^^^^^^^^^^

warning: unused import: `warn`
 --> src/mdiis.rs:4:24
  |
4 | use log::{info, trace, warn};
  |                        ^^^^

warning: unused variable: `gr`
   --> src/driver.rs:213:13
    |
213 |         let gr = &vv.correlations.cr + &vv.correlations.tr + 1.0;
    |             ^^ help: if this is intentional, prefix it with an underscore: `_gr`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `uv_solution`
   --> src/driver.rs:226:13
    |
226 |         let uv_solution = SolvedData::new(
    |             ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_uv_solution`

warning: unused variable: `gr_uv`
   --> src/driver.rs:235:13
    |
235 |         let gr_uv =
    |             ^^^^^ help: if this is intentional, prefix it with an underscore: `_gr_uv`

warning: unused `Result` that must be used
   --> src/driver.rs:243:13
    |
243 |             file.write_all(&encoded_vv[..]);
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled
    = note: `#[warn(unused_must_use)]` on by default
help: use `let _ = ...` to ignore the resulting value
    |
243 |             let _ = file.write_all(&encoded_vv[..]);
    |             +++++++

warning: `pyrism` (lib) generated 12 warnings (run `cargo fix --lib -p pyrism` to apply 11 suggestions)
    Finished release [optimized] target(s) in 0.08s
     Running `target/release/rism cSPCE_XRISM_methane_preconv.toml -v`
thread 'main' panicked at 'assertion failed: part.equal_dim(dimension)', /home/abdullah/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ndarray-0.15.6/src/zip/mod.rs:251:5
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
